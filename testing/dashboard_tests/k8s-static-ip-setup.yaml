# Kubernetes configuration for static IP setup

# 1. SSL Certificate for all subdomains
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: garaksecurity-ssl-cert
spec:
  domains:
    - api.garaksecurity.com
    - guardrails.garaksecurity.com
    - dashboard.garaksecurity.com
    - docs.garaksecurity.com

---
# 2. Ingress with static IP annotation
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: garaksecurity-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "garak-guardrails-ip"
    kubernetes.io/ingress.class: "gce"
    # Re-enable SSL now that HTTP is working
    networking.gke.io/managed-certificates: "garaksecurity-ssl-cert"
    ingress.gcp.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  # Main API endpoint
  - host: api.garaksecurity.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nemo-guardrails-service
            port:
              number: 8000
  # Alternative API endpoint
  - host: guardrails.garaksecurity.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nemo-guardrails-service
            port:
              number: 8000
  # Dashboard endpoint
  - host: dashboard.garaksecurity.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dashboard-service
            port:
              number: 8000
  # Documentation endpoint  
  - host: docs.garaksecurity.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docs-service
            port:
              number: 8000

---
# 3. NodePort service for ingress (points to existing nemo-simple pods)
apiVersion: v1
kind: Service
metadata:
  name: nemo-guardrails-service
  labels:
    app: nemo-guardrails
spec:
  selector:
    app: nemo-simple  # Point to existing nemo-simple pods
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    nodePort: 30080  # Specify nodePort for ingress
  type: NodePort

---
# 4. Dashboard service (pointing to monitoring dashboard)
apiVersion: v1
kind: Service
metadata:
  name: dashboard-service
  labels:
    app: dashboard
spec:
  selector:
    app: monitoring-dashboard  # Point to existing monitoring dashboard
  ports:
  - port: 8000
    targetPort: 80  # Dashboard runs on port 80
    protocol: TCP
    nodePort: 30081
  type: NodePort

---
# 5. Docs service (pointing to existing service for now - can be updated later)
apiVersion: v1
kind: Service
metadata:
  name: docs-service
  labels:
    app: docs
spec:
  selector:
    app: nemo-simple  # Use same backend as API for now
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    nodePort: 30082
  type: NodePort