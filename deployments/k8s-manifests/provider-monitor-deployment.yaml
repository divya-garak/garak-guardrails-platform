apiVersion: apps/v1
kind: Deployment
metadata:
  name: provider-monitor
  namespace: nemo-guardrails
  labels:
    app: provider-monitor
    component: monitoring
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: provider-monitor
  template:
    metadata:
      labels:
        app: provider-monitor
        component: monitoring
        version: v1.0.0
    spec:
      serviceAccountName: nemo-guardrails-sa
      containers:
      - name: provider-monitor
        image: gcr.io/PROJECT_ID/nemo-guardrails-monitor:latest
        ports:
        - containerPort: 8090
          name: control-api
        - containerPort: 8501
          name: dashboard
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEMO_CONFIG_PATH
          value: "/app/config/config.yml"
        - name: PROVIDER_DATA_PATH
          value: "/app/data/providers"
        - name: CORS_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: nemo-config
              key: cors-origins
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nemo-secrets
              key: redis-password
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: provider-data
          mountPath: /app/data/providers
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config-volume
        configMap:
          name: nemo-config
      - name: provider-data
        persistentVolumeClaim:
          claimName: provider-data-pvc
      - name: logs-volume
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

---
apiVersion: v1
kind: Service
metadata:
  name: provider-monitor-service
  namespace: nemo-guardrails
  labels:
    app: provider-monitor
spec:
  selector:
    app: provider-monitor
  ports:
  - name: control-api
    port: 8090
    targetPort: 8090
    protocol: TCP
  - name: dashboard
    port: 8501
    targetPort: 8501
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: provider-data-pvc
  namespace: nemo-guardrails
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ssd-retain

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: provider-config
  namespace: nemo-guardrails
data:
  supported-providers.yaml: |
    openai:
      required_credentials: ["api_key"]
      optional_credentials: ["api_base_url", "organization"]
      supported_models:
        - "gpt-4"
        - "gpt-4-turbo" 
        - "gpt-4o"
        - "gpt-4o-mini"
        - "gpt-3.5-turbo"
        - "gpt-3.5-turbo-instruct"
    
    anthropic:
      required_credentials: ["api_key"]
      optional_credentials: ["api_base_url"]
      supported_models:
        - "claude-3-5-sonnet-20241022"
        - "claude-3-opus-20240229"
        - "claude-3-sonnet-20240229"
        - "claude-3-haiku-20240307"
    
    azure:
      required_credentials: ["api_key", "api_base_url"]
      optional_credentials: ["api_version"]
      supported_models:
        - "azure-gpt-4"
        - "azure-gpt-35-turbo"
    
    huggingface:
      required_credentials: []
      optional_credentials: ["api_key", "api_base_url"]
      supported_models:
        - "mistral-7b"
        - "llama2-7b"
        - "codellama-7b"

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: provider-monitor-network-policy
  namespace: nemo-guardrails
spec:
  podSelector:
    matchLabels:
      app: provider-monitor
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nemo-guardrails
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 8090
    - protocol: TCP
      port: 8501
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: nemo-guardrails
    ports:
    - protocol: TCP
      port: 8000
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53