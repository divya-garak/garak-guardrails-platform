# Garak Dashboard Environment Variables Template
# Copy this file to .env and fill in your values

# ================================
# Firebase Authentication Settings
# ================================
# Get these values from your Firebase project settings
FIREBASE_API_KEY=your-firebase-api-key-here
FIREBASE_AUTH_DOMAIN=your-project-id.firebaseapp.com
FIREBASE_PROJECT_ID=your-project-id
FIREBASE_STORAGE_BUCKET=your-project-id.appspot.com
FIREBASE_MESSAGING_SENDER_ID=your-messaging-sender-id
FIREBASE_APP_ID=your-firebase-app-id

# Path to Firebase service account JSON file
# Download from Firebase Console > Project Settings > Service Accounts
FIREBASE_CREDENTIALS=./firebase-sa.json

# ================================
# Authentication Control
# ================================
# Set to 'true' to disable authentication (development only!)
# WARNING: Do not use DISABLE_AUTH=true in production
DISABLE_AUTH=false

# Optional: Override auth domain (used for custom domains)
# HOST=yourdomain.com

# ================================
# Application Settings
# ================================
# Flask secret key (generate a secure random string)
SECRET_KEY=your-secret-key-here

# Application port (default: 8000)
PORT=8000

# Enable debug mode (development only)
DEBUG=false

# ================================
# Data Storage Paths
# ================================
# Directory for job data files
DATA_DIR=./data

# Directory for report files
REPORT_DIR=./reports

# Set to 'true' when running in Docker
DOCKER_ENV=false

# ================================
# Example Usage Instructions
# ================================
# 1. Copy this file: cp .env.example .env
# 2. Edit .env with your actual values
# 3. For quick development setup: set DISABLE_AUTH=true
# 4. For production: configure all Firebase settings
# 5. Load environment: source .env (or use python-dotenv)

# ================================
# Firebase Setup Quick Reference
# ================================
# 1. Go to https://console.firebase.google.com
# 2. Create a new project or select existing one
# 3. Enable Authentication > Sign-in methods > Email/Password and Google
# 4. Get config from Project Settings > General > Your apps (Web app)
# 5. Download service account key from Project Settings > Service Accounts
# 6. Fill in the values above