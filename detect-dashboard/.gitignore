# ================================
# Credentials & Secrets
# ================================
# Environment files
.env
.env.local
.env.*.local
.env.production
.env.staging
.env.development

# Firebase credentials
firebase-sa.json
firebase-config.json
firebase-adminsdk-*.json

# Google Cloud credentials
gcp-creds.json
gcp-service-account.json
google-cloud-credentials.json
service-account-key.json

# Other credential files
*-credentials.json
*-service-account.json
*-sa.json
credentials.json
service_account.json

# API keys and tokens
api-keys.json
*.pem
*.p12
*.pfx
*.key
*.crt
*.cert
*.certificate
id_rsa*
id_dsa*
id_ecdsa*
id_ed25519*

# Authentication tokens
.auth_token
.access_token
auth_token.txt
access_token.txt

# Configuration files that may contain secrets
config.json
secrets.json
local_settings.py
settings_local.py

# ================================
# Python
# ================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ================================
# OS Generated Files
# ================================
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Linux
*~

# ================================
# Development Tools
# ================================
# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp
.cache/
.tmp/
tmp/

# ================================
# Application Specific
# ================================
# Data directories (may contain sensitive info)
data/sensitive/
data/private/
cache/
logs/
*.log

# Backup files
*.bak
*.backup
*.old

# Firebase cache
.firebase/

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes secrets
*-secret.yaml
secrets.yaml

# ================================
# Additional Security Patterns
# ================================
# Common secret file patterns
*secret*
*password*
*passwd*
*private*
*confidential*

# Exclude these patterns but allow specific non-sensitive files
!.env.example
!.env.template
!.env.sample
!password_reset_template.html
!private_policy.html